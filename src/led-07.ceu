#include "sdl/sdl.ceu"

var&? SDL_Init sdl = spawn SDL_Init("LED 7", 640,480, SDL_Color(0xCC,0xCC,0xCC,0xFF));
watching sdl do
    code/await Led (var int x, var int y) -> NEVER do
        var bool is_on = false;
        par do
            loop do
                par/or do
                    var SDL_Point pt = val SDL_Point(x,y);
                    var _SDL_MouseButtonEvent&& mse =
                            await SDL_MOUSEBUTTONDOWN
                            until (_SDL_Circle_vs_Mouse(&&pt as _SDL_Point&&,25,mse) as bool);
                with
                    every 500ms do
                        is_on = not is_on;
                    end
                end
                await 2s;
            end
        with
            every SDL_REDRAW do
                _filledCircleRGBA(&&outer.sdl.ren, x,y,50, 0xFF,0xFF,0xFF,0xFF);
                if is_on then
                    _filledCircleRGBA(&&outer.sdl.ren, x,y,47, 0x00,0x88,0x00,0xFF);
                else
                    _filledCircleRGBA(&&outer.sdl.ren, x,y,47, 0x00,0x00,0x00,0xFF);
                end
            end
        end
    end

    code/await But (none) -> none do
        par/or do
            var SDL_Point pt = val SDL_Point(300,425);
            var _SDL_MouseButtonEvent&& mse =
                    await SDL_MOUSEBUTTONDOWN
                    until (_SDL_Circle_vs_Mouse(&&pt as _SDL_Point&&,15,mse) as bool);
        with
            every SDL_REDRAW do
                _filledCircleRGBA(&&outer.sdl.ren, 300,425,30, 0xFF,0x00,0x00,0xFF);
            end
        end
    end

    loop do
        watching But() do
            par do
                await Led(100,100);
            with
                await Led(300,100);
            with
                await Led(500,100);
            with
                await Led(100,300);
            with
                await Led(300,300);
            with
                await Led(500,300);
            end
        end
    end
end

escape 0;
